mod hello_world;
mod primitives;
mod custom_types;
mod variable_bindings;
mod types;

fn main() {
    hello_world::hello_world::main();
    println!("----------------------- hello_world::hello_world::main(); 结束 --------------------------");
    hello_world::comments::main();
    println!("----------------------- hello_world::comments::main(); 结束 --------------------------");
    hello_world::formatted_print::main();
    println!("----------------------- hello_world::formatted_print::main(); 结束 --------------------------");
    hello_world::formatted_print_debug::main();
    println!("----------------------- hello_world::formatted_print_debug::main(); 结束 --------------------------");
    hello_world::formatted_print_display::main();
    println!("----------------------- hello_world::formatted_print_display::main(); 结束 --------------------------");
    hello_world::formatted_print_display_list::main();
    println!("----------------------- hello_world::formatted_print_display_list::main(); 结束 --------------------------");
    hello_world::formatted_print_formatting::main();
    println!("----------------------- hello_world::formatted_print_formatting::main(); 结束 --------------------------");
    primitives::primitives::main();
    println!("----------------------- primitives::primitives::main(); 结束 --------------------------");
    primitives::literals_and_operators::main();
    println!("----------------------- primitives::literals_and_operators::main(); 结束 --------------------------");
    primitives::tuples::main();
    println!("----------------------- primitives::tuples::main(); 结束 --------------------------");
    primitives::arrays_and_slices::main();
    println!("----------------------- primitives::arrays_and_slices::main(); 结束 --------------------------");
    custom_types::custom_types::main();
    println!("----------------------- custom_types::custom_types::main(); 结束 --------------------------");
    custom_types::structures::main();
    println!("----------------------- custom_types::structures::main(); 结束 --------------------------");
    custom_types::enums::main();
    println!("----------------------- custom_types::enums::main(); 结束 --------------------------");
    custom_types::enums_use::main();
    println!("----------------------- custom_types::enums_use::main(); 结束 --------------------------");
    custom_types::enums_c_like::main();
    println!("----------------------- custom_types::enums_c_like::main(); 结束 --------------------------");
    custom_types::enums_linked_list::main();
    println!("----------------------- custom_types::enums_linked_list::main(); 结束 --------------------------");
    custom_types::constants::main();
    println!("----------------------- custom_types::constants::main(); 结束 --------------------------");
    variable_bindings::variable_bindings::main();
    println!("----------------------- variable_bindings::variable_bindings::main(); 结束 --------------------------");
    variable_bindings::mutability::main();
    println!("----------------------- variable_bindings::mutability::main(); 结束 --------------------------");
    variable_bindings::scope_and_shadowing::main();
    println!("----------------------- variable_bindings::scope_and_shadowing::main(); 结束 --------------------------");
    variable_bindings::declare_first::main();
    println!("----------------------- variable_bindings::declare_first::main(); 结束 --------------------------");
    variable_bindings::freezing::main();
    println!("----------------------- variable_bindings::freezing::main(); 结束 --------------------------");
    types::types::main();
    println!("----------------------- types::types::main(); 结束 --------------------------");
    types::casting::main();
    println!("----------------------- types::casting::main(); 结束 --------------------------");
    types::literals::main();
    println!("----------------------- types::literals::main(); 结束 --------------------------");
    types::inference::main();
    println!("----------------------- types::inference::main(); 结束 --------------------------");
    types::aliasing::main();
    println!("----------------------- types::aliasing::main(); 结束 --------------------------");
}
